{  "name": "dev-env-copilot-extension",
  "displayName": "Dev Environment Copilot",
  "description": "Intelligent environment detection and command syntax assistance for GitHub Copilot",
  "version": "1.0.0",
  "publisher": "chonksoft",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Chat"
  ],
  "keywords": [
    "copilot",
    "mcp",
    "environment",
    "cross-platform",
    "development",
    "shell",
    "commands"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Dev Environment Copilot",
      "properties": {
        "devEnvCopilot.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Dev Environment Copilot MCP server"
        },
        "devEnvCopilot.logLevel": {
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR"
          ],
          "default": "INFO",
          "description": "Log level for the MCP server"
        },
        "devEnvCopilot.useDocker": {
          "type": "boolean",
          "default": false,
          "description": "Use Docker to run the MCP server (requires Docker)"
        },        "devEnvCopilot.customConfigPath": {
          "type": "string",
          "default": "",
          "description": "Path to custom configuration file"
        },
        "devEnvCopilot.globalContext.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable global context injection into all Copilot prompts"
        },
        "devEnvCopilot.globalContext.instructions": {
          "type": "string",
          "default": "",
          "description": "Global instructions to inject into all Copilot prompts"
        },
        "devEnvCopilot.globalContext.includeEnvironment": {
          "type": "boolean",
          "default": true,
          "description": "Include environment information in global context"
        },
        "devEnvCopilot.globalContext.includeWorkspace": {
          "type": "boolean",
          "default": true,
          "description": "Include workspace information in global context"
        }
      }
    },    "commands": [
      {
        "command": "devEnvCopilot.detectEnvironment",
        "title": "Detect Environment",
        "category": "Dev Env Copilot"
      },
      {
        "command": "devEnvCopilot.showConfiguration",
        "title": "Show Configuration",
        "category": "Dev Env Copilot"
      },
      {
        "command": "devEnvCopilot.restartServer",
        "title": "Restart MCP Server",
        "category": "Dev Env Copilot"
      },
      {
        "command": "devEnvCopilot.toggleGlobalContext",
        "title": "Toggle Global Context Injection",
        "category": "Dev Env Copilot"
      },
      {
        "command": "devEnvCopilot.updateGlobalInstructions",
        "title": "Update Global Instructions",
        "category": "Dev Env Copilot"
      },
      {
        "command": "devEnvCopilot.showContextStatus",
        "title": "Show Global Context Status",
        "category": "Dev Env Copilot"
      }
    ],
    "menus": {      "commandPalette": [
        {
          "command": "devEnvCopilot.detectEnvironment",
          "when": "true"
        },
        {
          "command": "devEnvCopilot.showConfiguration",
          "when": "true"
        },
        {
          "command": "devEnvCopilot.restartServer",
          "when": "true"
        },
        {
          "command": "devEnvCopilot.toggleGlobalContext",
          "when": "true"
        },
        {
          "command": "devEnvCopilot.updateGlobalInstructions",
          "when": "true"
        },
        {
          "command": "devEnvCopilot.showContextStatus",
          "when": "true"        }
      ]
    },    "chatParticipants": [
      {
        "id": "devEnvCopilot.devenv",
        "name": "devenv",
        "description": "Write environment context to .vscode/copilot-instructions.md for automatic Copilot context",
        "isSticky": false,
        "commands": [
          {
            "name": "update",
            "description": "Update environment context in copilot-instructions.md"
          },
          {
            "name": "show",
            "description": "Show current environment information"
          }
        ]
      }
    ]
  },  "scripts": {
    "vscode:prepublish": "npm run compile && npm run copy-assets",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "package": "vsce package",
    "publish": "vsce publish",
    "copy-assets": "powershell -Command \"Copy-Item '../images/dev-env-copilot-mcp-logo.png' './icon.png' -Force; Copy-Item '../LICENSE' './LICENSE' -Force\""
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.7.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.3.4",
    "@vscode/vsce": "^2.22.0",
    "eslint": "^8.50.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "cross-spawn": "^7.0.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/0nilinkz/dev-env-copilot.git"
  },
  "bugs": {
    "url": "https://github.com/0nilinkz/dev-env-copilot/issues"
  },  "homepage": "https://github.com/0nilinkz/dev-env-copilot#readme",
  "license": "MIT",  "licenseFile": "../LICENSE",
  "icon": "icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  }
}

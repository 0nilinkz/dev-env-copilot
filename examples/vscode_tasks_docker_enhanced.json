{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "docker-mcp-detect-environment",
      "type": "shell",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "--interactive",
        "--volume",
        "${workspaceFolder}:/workspace:ro",
        "dev-env-copilot:latest",
        "detect_environment"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false
      },
      "problemMatcher": [],
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "docker-mcp-get-command-syntax",
      "type": "shell",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "--interactive",
        "--volume",
        "${workspaceFolder}:/workspace:ro",
        "dev-env-copilot:latest",
        "get_command_syntax",
        "${input:commandType}"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "docker-mcp-start-server",
      "type": "shell",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "--interactive",
        "--name",
        "dev-env-copilot-server",
        "--volume",
        "${workspaceFolder}:/workspace:ro",
        "dev-env-copilot:latest"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "docker-mcp-stop-server",
      "type": "shell",
      "command": "docker",
      "args": [
        "stop",
        "dev-env-copilot-server"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent"
      }
    }
  ],
  "inputs": [
    {
      "id": "commandType",
      "description": "What type of command syntax do you need?",
      "type": "pickString",
      "options": [
        "test",
        "build",
        "run",
        "install",
        "git",
        "docker",
        "python"
      ]
    }
  ]
}